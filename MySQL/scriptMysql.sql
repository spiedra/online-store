CREATE SCHEMA B97452_PROYECTO2_IF4101;
USE B97452_PROYECTO2_IF4101;

CREATE TABLE B97452_PROYECTO2_IF4101.tb_ROLE
(
	 ID        INT PRIMARY KEY 
    ,TYPE      VARCHAR(36) NOT NULL
);

-------------------------------------

INSERT INTO b97452_proyecto2_if4101.tb_role(ID, TYPE)VALUES(1,'Admin'),(2,'Customer');

------------------------------------

CREATE TABLE B97452_PROYECTO2_IF4101.tb_USERS
(
	 ID        INT AUTO_INCREMENT PRIMARY KEY
    ,USER_NAME VARCHAR(36) NOT NULL UNIQUE
    ,PASSWORD  VARCHAR(36) NOT NULL
    ,ID_ROLE   INT 
    ,CONSTRAINT FK_USER_ROLE FOREIGN KEY (ID_ROLE) REFERENCES B97452_PROYECTO2_IF4101.tb_ROLE (ID)
);

-----------------------------------

INSERT INTO b97452_proyecto2_if4101.tb_users(USER_NAME, PASSWORD, ID_ROLE)VALUES('admin', 'superuser', 1);

-----------------------------------

DELIMITER $$
CREATE PROCEDURE b97452_proyecto2_if4101.sp_VALIDATE_USER
(
IN param_USER_NAME VARCHAR(36), 
IN param_PASSWORD VARCHAR(36),
OUT out_RETURN    INT)
BEGIN 
	IF NOT EXISTS (SELECT USER_NAME FROM b97452_proyecto2_if4101.tb_users WHERE USER_NAME = param_USER_NAME) THEN
		SELECT -1 INTO out_RETURN;
	ELSE 
		IF(1 = (SELECT ID_ROLE FROM b97452_proyecto2_if4101.tb_users WHERE USER_NAME = param_USER_NAME AND PASSWORD = param_PASSWORD)) THEN
			SELECT 1 INTO out_RETURN;
		ELSEIF(2 = (SELECT ID_ROLE FROM b97452_proyecto2_if4101.tb_users WHERE USER_NAME = param_USER_NAME AND PASSWORD = param_PASSWORD)) THEN
			SELECT 2 INTO out_RETURN;
        END IF;
	END IF;
END;

-----------------------------------

DELIMITER $$
CREATE PROCEDURE b97452_proyecto2_if4101.sp_REGISTER_ADMIN
(
IN param_USER_NAME VARCHAR(36), 
IN param_PASSWORD VARCHAR(36),
OUT out_RETURN    INT)
BEGIN 
	IF EXISTS (SELECT USER_NAME FROM b97452_proyecto2_if4101.tb_users WHERE USER_NAME = param_USER_NAME AND PASSWORD = param_PASSWORD) THEN
		SELECT 0 INTO out_RETURN;
	ELSE 
		INSERT INTO b97452_proyecto2_if4101.tb_users(USER_NAME, PASSWORD, ID_ROLE)
        VALUES(param_USER_NAME, param_PASSWORD, 1);
        SELECT 1 INTO out_RETURN;
	END IF;
END;